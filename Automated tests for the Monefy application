Scenarios
The automated scenarios here are the most used scenarios which have a business impact in case of failure with priority serious and high:

Test cases:
  1. A user can CRUD income (Priority: serious).
  2. A user can CRUD expense (Priority: serious).
  3. A user can CRUD account (Priority: high).
  4. Settings (like changing language, changing categories' name, changing currency)(Priority: medium).
  5. Search (search field, search by date) (Priority: medium).
  6. Filter balance by day, by month or by year (Priority: medium).
The possibilities of automating the selected test cases on different levels:
The main test levels are unit testing, integration testing, system testing, and acceptance testing.
We can here apply a test pyramid and its testing levels on automation 
(E2E test, integration tests and unit tests).

1. E2E testing: 

    E2E tests like the already implemented in this repo.
    
    Pros:
     - Mimic a real user action and his journey through the app.
     - Give indicatory for the app status.
     - Can be use for regression testing and smoke testing before releasing.
     
     Cons:
     - Slow execution.
     - Flakiness
     
2. Integration testing:

    It can not be applied from the app itself or APK. APIs are required here to check how it
    works(checking APIs calls and responses) and calling between each other.
    
    Pros:
      - Fast execution. 
      - Keep an eye on data transfering and handing, so issues are exposed and easy to be cought.
      
    Cons:
      - It can not check the UI and can not mimic a user behaviour with the app., so we can not 
      depend only on it to check the app behavior.
      
3. Unit testing:
     It can not be applied from the app itself or APK. Unit testing is responible for testing a single unit 
     or component of a software(like functions).
      
     Pros:
      - Provides better and clean code.
      - It helps to let a code be easy to refactor.
      
     Cons:
      - It can not check the UI and can not mimic a user behaviour with the app., so we can not 
      depend only on it to check the app behavior.
